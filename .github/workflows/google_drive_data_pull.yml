name: pull and process data from google drive

on:
  push:
    branches:
      - main
  #schedule:
    # uses UTC/GMT time (+ 5 hrs)
    ####- cron: "0 17 * * 3" # Every Wednesday at 1200 hrs = 1700 UTC
    #- cron: "0 */4 * * *" # Every 4th hour on
    #- cron: "0 6 * * *" # Every day at 1am EST = 0600 GMT
    #- cron: "26 * * * *" # Every hour on hour
    #- cron: "0 18 * * 0" # Every Sunday at 1300 hrs = 1800 GMT

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      #GITHUB_PAT: ${{ secrets.GH_RELEASE }}
      #R_REMOTES_NO_ERRORS_FROM_WARNINGS: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install command line packages
        run: |
          sudo apt update
          sudo apt-get install libcurl4-openssl-dev libgit2-dev
#          sudo apt-get install  libgdal-dev libcurl4-gnutls-dev libgit2-dev libudunits2-dev libharfbuzz-dev libfribidi-dev
        shell: bash

      # - name: Set up R
      #   uses: r-lib/actions/setup-r@v2
      #   with:
      #     r-version: '4.2.0'
      # 
      # - name: Install packages
      #   run: |
      #     install.packages(c("remotes","dplyr", "here","googledrive", "googlesheets4","rmarkdown","rlang"))
      #   shell: Rscript {0}
##################################################################################################
    ### code from this website https://github.com/pew-actions/google-drive-download
     - name: Acquire Google access token
        id: google-access-token
        uses: playeveryware/action-google-access-token@v1
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS }}
          scope: 'https://www.googleapis.com/auth/drive.readonly'

      - name: Download file
        uses: playeveryware/action-google-drive-download@v1
        with:
          token: ${{ steps.google-access-token.outputs.token }}
          file-url: 'https://drive.google.com/drive/u/1/folders/1GYVEnqPp_2nJcebNgrTRRyLT4o8Rwxxf'
          path: test.bin
###########################################################################################################
      # - name: Download from Google Drive
      #   uses: satackey/action-google-drive@v1
      #   with:
      #    skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
      #    download-from: "shiny_output_data/"
      #    download-to: ./
      # 
      #   # For those who set up Google Drive API client ID and secret themselves
      #   #google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
      #   #google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      # 
      # - name: ingest data
      #   run: |
      #     source(here::here("R/data_ingest_compile.R"))
      #   shell: Rscript {0}
      # 
      # - name: display data
      #   run: |
      #     options(timeout = 60 * 60 * 6)
      #     source(here::here("R/data_display.R"))
      #   shell: Rscript {0}

     

      # - name: render readme.rmd
      #   run: |
      #     options(timeout = 60 * 60 * 6)
      #     rmarkdown::render(here::here("README.Rmd"))
      #   shell: Rscript {0}

      #- name: Find differences
      # Create text explaining differences and append to news.md and release notes

      #- name: Find differences
      # Create text explaining differences and append to news.md and release notes

      # Send email indicating if anything has changed

      # - name: commit data files
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add data/stockAssessmentData.rda
      #     git add data/stockAssessmentSummary.rda
      #     git add data-raw/datapull.txt
      #     git add README.md
      #     git add NEWS.md
      #     git add DESCRIPTION
      #     git commit -m "automated commit from api yml"
      #     git push

      # - name: create gh-release
      #   run: |
      #       version <- readRDS(here::here("data-raw/version.rds"))
      #       if(!is.null(version)){
      #       usethis::use_github_release(publish = T)
      #       }
      #   shell: Rscript {0}